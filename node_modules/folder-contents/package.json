{
  "name": "folder-contents",
  "version": "1.1.0",
  "description": "List the contents of a folder recursively or not. Use the options.",
  "homepage": "https://github.com/npm-bdream/folder-contents",
  "main": "./lib/app.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": {
    "name": "bdream",
    "email": "npm.bdream@gmail.com"
  },
  "keywords": [
    "folder",
    "dir",
    "content",
    "recursive",
    "recursively",
    "list",
    "json",
    "file",
    "path",
    "extention",
    "name",
    "path",
    "bytes",
    "byte",
    "i18n",
    "date",
    "dates",
    "format",
    "filter",
    "ignore",
    "accept"
  ],
  "license": "",
  "dependencies": {
    "bytes-i18n": "0.0.x",
    "dateformat": "1.0.8-1.2.3"
  },
  "readme": "[![NPM](https://nodei.co/npm/folder-contents.png?downloads=true&stars=true)](https://nodei.co/npm/folder-contents/)\r\n\r\n**folder-contents**\r\n===================\r\n\r\nList the contents of a folder recursively or not. Use the options.\r\n\r\n**Usage**\r\n=========\r\n\r\nWith options\r\n\r\n    var folderContents = require('folder-contents');\r\n\r\n    var options = {\r\n        \"path\":\".\",\r\n        \"separator\":\".\",\r\n        \"recursively\":false,\r\n        \"method\":\"simple\",\r\n        \"useBasePath\":true,\r\n        \"filter\":{\r\n            \"extensionIgnore\":[],\r\n            \"extensionAccept\":[],\r\n            \"folderIgnore\":[],\r\n            \"fileIgnore\":[]\r\n        },\r\n        \"date\":true, // See doc for patterns and i18n\r\n        \"size\":true, // See doc for patterns and i18n\r\n        \"useFullPath\":false\r\n    };\r\n    var jsonResult = folderContents(options);\r\n    // console.log(jsonResult);\r\n    // console.log(JSON.stringify(jsonResult));\r\n\r\nWithout options\r\n\r\n    var folderContents = require('folder-contents');\r\n    // console.log(folderContents());\r\n\r\nDetails for options\r\n------------------\r\n\r\n**`path` :** *( string )* \r\n\r\n* default path is **`./`** (don't add last **`/`** if you use this option).\r\n\r\n**`separator` :** *( string )*\r\n\r\n* default extension separator is **`.`**\r\n\r\n**`recursively` :** *( bool )*\r\n\r\n* default to **`false`**. If set at **`true`** list recursively files for all subsolder levels.\r\n\r\n**`method` :** *( string )*\r\n    \r\n* `simple` : return simple json list with files. (is default)\r\n* `simpleExtension` : return simple json object with list(s) of file(s) by extension.\r\n* `simplePath` : return simple json object with list(s) of file(s) by folder.\r\n* `complexPath` : return complex json structure based on path (More operations).\r\n\r\n**`useBasePath` :** *( bool )*\r\n\r\n* default to **`true`**. If set at **`false`**, base path is not returned in result.\r\n* for example if you list **`./test`** as root folder, **`./test`** will not appear in file **`\"path\"`** and **`\"fpath\"`** values\r\n\r\n**`filter.extensionIgnore`** : *( JSON.[ ] )* \r\n\r\n* List of extension *( string )* to ignore.\r\n* IS CASE INSENSITIVE.\r\n* If **`filter.extensionAccept`** is used, **`filter.extensionIgnore`** is ignored ;p\r\n\r\n**`filter.extensionAccept`** : *( JSON.[ ] )* \r\n\r\n* List of extension *( string )* to accept.\r\n* IS CASE INSENSITIVE.\r\n\r\n**`filter.folderIgnore`** *( JSON.[ ] )* \r\n\r\n* List of folder name *( string )* to ignore.\r\n* Is case sensitive.\r\n\r\n**`filter.fileIgnore`** *( JSON.[ ] )*\r\n\r\n* List of file name *( string )* to ignore. \r\n* Is case sensitive.\r\n* Add names without extensions.\r\n\r\n**`date :`** *( bool | string )*\r\n\r\n* Default date value is **`true`**. Return timestamp for `atime`,`ctime` and `mtime` in json result.\r\n* If you don't want dates in json result, set this value to **`false`**.\r\n* If you want formated dates set a string (See [npm dateformat package][1] for patterns).\r\nExemple date string format : **`\"yyyy/mm/dd - HH:MM:ss\"`**\r\nFor `atime`,`ctime` and `mtime` please see : [Linux info page][2]\r\n\r\n**`size :`** *( bool | JSON.{ } )*\r\n\r\n* default size value is `true`, return size in byte for each files.\r\n* If you don't want size in json result, set this value to **`false`**.\r\n* If you want formated size use this json object :\r\n    \r\n        {\r\n           \"b\":\"b or B or o(for french) or what you want ...\",\r\n           \"kb\":\"kb\",\r\n           \"mb\":\"mb\",\r\n           \"gb\":\"gb\",\r\n           \"tb\":\"tb\"\r\n        }\r\n\r\n* see [npm bytes-i18n package][3]\r\n\r\n**`useFullPath` :** *( bool )* \r\n\r\n* default to false, if set to true `fpath` value is added for each files.\r\n\r\n**Examples**\r\n=========\r\n\r\nFor examples I use these files and my js app is in **`./`** folder :\r\n    \r\n    ./test/.htaccess\r\n    ./test/photo.JPG\r\n    ./test/subfolder/film.mkv\r\n\r\nExamples for basic config\r\n-------------------------\r\n\r\n**Example A1 : default result for `simple methode`** (not recursive)\r\n\r\nIn this exemple, options are sames because we don't use recursivity\r\n\r\n* default methode is `simple` \r\n* `complexPath` is set to `simple` when `recursively` is not defined or false.\r\n* `simplePath` is set to `simple` when `recursively` is not defined or false.\r\n\r\n        var folderContents = require('folder-contents');\r\n        \r\n        var options = {\r\n            \"path\":\"./test\"\r\n        };\r\n        \r\n        options = {\r\n            \"path\":\"./test\",\r\n            \"method\":\"simple\"\r\n        };\r\n        \r\n        options = {\r\n            \"path\":\"./test\",\r\n            \"method\":\"simplePath\"\r\n        };\r\n        \r\n        options = {\r\n            \"path\":\"./test\",\r\n            \"method\":\"complexPath\"\r\n        };\r\n        \r\n        var result = folderContents(options);\r\n        console.log(JSON.stringify(result));\r\n        \r\n        // Log result :\r\n        {\r\n            \".files\": [\r\n                {\r\n                    \"path\": \"./test\",\r\n                    \"name\": \"\",\r\n                    \"ext\": \"htaccess\",\r\n                    \"size\": 421,\r\n                    \"atime\": 1402061211000,\r\n                    \"mtime\": 1402061211000,\r\n                    \"ctime\": 1402061200000\r\n                },\r\n                {\r\n                    \"path\": \"./test\",\r\n                    \"name\": \"photo\",\r\n                    \"ext\": \"JPG\",\r\n                    \"size\": 2760113,\r\n                    \"atime\": 1402061374000,\r\n                    \"mtime\": 1216722663000,\r\n                    \"ctime\": 1402061374000\r\n                }\r\n            ],\r\n            \".folders\": [\r\n                \"subfolder\"\r\n            ]\r\n        }\r\n    \r\n**Example A2 : default result for `simpleExtension methode`** (not recursive)\r\n    \r\n    var folderContents = require('folder-contents');\r\n    \r\n    options = {\r\n        \"path\":\"./test\",\r\n        \"method\":\"simpleExtension\"\r\n    };\r\n    \r\n    var result = folderContents(options);\r\n    console.log(JSON.stringify(result));\r\n    \r\n    {\r\n        \"htaccess\": [\r\n            {\r\n                \"path\": \"./test\",\r\n                \"name\": \"\",\r\n                \"ext\": \"htaccess\",\r\n                \"size\": 421,\r\n                \"atime\": 1402061211000,\r\n                \"mtime\": 1402061211000,\r\n                \"ctime\": 1402061200000\r\n            }\r\n        ],\r\n        \"JPG\": [\r\n            {\r\n                \"path\": \"./test\",\r\n                \"name\": \"photo\",\r\n                \"ext\": \"JPG\",\r\n                \"size\": 2760113,\r\n                \"atime\": 1402061374000,\r\n                \"mtime\": 1216722663000,\r\n                \"ctime\": 1402061374000\r\n            }\r\n        ],\r\n        \".folders\": [\r\n            \"subfolder\"\r\n        ]\r\n    }\r\n\r\n\r\nExamples for recursive config\r\n-----------------------------\r\n\r\n\r\n\r\n**Example B1 : default result for `simple methode`**\r\n\r\n    var folderContents = require('folder-contents');\r\n\r\n    var options = {\r\n        \"path\":\"./test\",\r\n        \"recursively\":true\r\n    };\r\n    \r\n    var result = folderContents(options);\r\n    console.log(JSON.stringify(result));\r\n    \r\n    // Log result :\r\n    [\r\n        {\r\n            \"path\": \"./test\",\r\n            \"name\": \"\",\r\n            \"ext\": \"htaccess\",\r\n            \"size\": 421,\r\n            \"atime\": 1402061211000,\r\n            \"mtime\": 1402061211000,\r\n            \"ctime\": 1402061200000\r\n        },\r\n        {\r\n            \"path\": \"./test\",\r\n            \"name\": \"photo\",\r\n            \"ext\": \"JPG\",\r\n            \"size\": 2760113,\r\n            \"atime\": 1402061374000,\r\n            \"mtime\": 1216722663000,\r\n            \"ctime\": 1402061374000\r\n        },\r\n        {\r\n            \"path\": \"./test/subfolder\",\r\n            \"name\": \"film\",\r\n            \"ext\": \"mkv\",\r\n            \"size\": 703836104,\r\n            \"atime\": 1402061717000,\r\n            \"mtime\": 1369822031000,\r\n            \"ctime\": 1402061717000\r\n        }\r\n    ]\r\n\r\n**Example B2 : default result for `simpleExtension methode`**\r\n\r\n    var folderContents = require('folder-contents');\r\n\r\n    var options = {\r\n        \"path\":\"./test\",\r\n        \"method\":\"simpleExtension\",\r\n        \"recursively\":true\r\n    };\r\n    \r\n    var result = folderContents(options);\r\n    console.log(JSON.stringify(result));\r\n    \r\n    // Log result :\r\n    {\r\n        \"htaccess\": [\r\n            {\r\n                \"path\": \"./test\",\r\n                \"name\": \"\",\r\n                \"ext\": \"htaccess\",\r\n                \"size\": 421,\r\n                \"atime\": 1402061211000,\r\n                \"mtime\": 1402061211000,\r\n                \"ctime\": 1402061200000\r\n            }\r\n        ],\r\n        \"JPG\": [\r\n            {\r\n                \"path\": \"./test\",\r\n                \"name\": \"photo\",\r\n                \"ext\": \"JPG\",\r\n                \"size\": 2760113,\r\n                \"atime\": 1402061374000,\r\n                \"mtime\": 1216722663000,\r\n                \"ctime\": 1402061374000\r\n            }\r\n        ],\r\n        \"mkv\": [\r\n            {\r\n                \"path\": \"./test/subfolder\",\r\n                \"name\": \"film\",\r\n                \"ext\": \"mkv\",\r\n                \"size\": 703836104,\r\n                \"atime\": 1402061717000,\r\n                \"mtime\": 1369822031000,\r\n                \"ctime\": 1402061717000\r\n            }\r\n        ]\r\n    }\r\n\r\n**Example B3 : default result for `simplePath methode`**\r\n\r\n    var folderContents = require('folder-contents');\r\n\r\n    var options = {\r\n        \"path\":\"./test\",\r\n        \"method\":\"simplePath\",\r\n        \"recursively\":true\r\n    };\r\n    \r\n    var result = folderContents(options);\r\n    console.log(JSON.stringify(result));\r\n    \r\n    // Log result :\r\n    {\r\n        \"./test/\": [\r\n            {\r\n                \"path\": \"./test\",\r\n                \"name\": \"\",\r\n                \"ext\": \"htaccess\",\r\n                \"size\": 421,\r\n                \"atime\": 1402061211000,\r\n                \"mtime\": 1402061211000,\r\n                \"ctime\": 1402061200000\r\n            },\r\n            {\r\n                \"path\": \"./test\",\r\n                \"name\": \"photo\",\r\n                \"ext\": \"JPG\",\r\n                \"size\": 2760113,\r\n                \"atime\": 1402061374000,\r\n                \"mtime\": 1216722663000,\r\n                \"ctime\": 1402061374000\r\n            }\r\n        ],\r\n        \"./test/subfolder/\": [\r\n            {\r\n                \"path\": \"./test/subfolder\",\r\n                \"name\": \"film\",\r\n                \"ext\": \"mkv\",\r\n                \"size\": 703836104,\r\n                \"atime\": 1402061717000,\r\n                \"mtime\": 1369822031000,\r\n                \"ctime\": 1402061717000\r\n            }\r\n        ]\r\n    }\r\n\r\n**Example B4 : default result for `complexPath methode`**\r\n\r\n    var folderContents = require('folder-contents');\r\n\r\n    var options = {\r\n        \"path\":\"./test\",\r\n        \"method\":\"complexPath\",\r\n        \"recursively\":true\r\n    };\r\n    \r\n    var result = folderContents(options);\r\n    console.log(JSON.stringify(result));\r\n    \r\n    // Log result :\r\n    {\r\n        \".\": {\r\n            \"test\": {\r\n                \".files\": [\r\n                    {\r\n                        \"path\": \"./test\",\r\n                        \"name\": \"\",\r\n                        \"ext\": \"htaccess\",\r\n                        \"size\": 421,\r\n                        \"atime\": 1402061211000,\r\n                        \"mtime\": 1402061211000,\r\n                        \"ctime\": 1402061200000\r\n                    },\r\n                    {\r\n                        \"path\": \"./test\",\r\n                        \"name\": \"photo\",\r\n                        \"ext\": \"JPG\",\r\n                        \"size\": 2760113,\r\n                        \"atime\": 1402061374000,\r\n                        \"mtime\": 1216722663000,\r\n                        \"ctime\": 1402061374000\r\n                    }\r\n                ],\r\n                \"subfolder\": {\r\n                    \".files\": [\r\n                        {\r\n                            \"path\": \"./test/subfolder\",\r\n                            \"name\": \"film\",\r\n                            \"ext\": \"mkv\",\r\n                            \"size\": 703836104,\r\n                            \"atime\": 1402061717000,\r\n                            \"mtime\": 1369822031000,\r\n                            \"ctime\": 1402061717000\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\nNow you can find **`./test`** files like this :\r\n    \r\n    result['.']['test']['.files']\r\n    \r\nUse folder **`./test/subfolder`** :\r\n\r\n    result['.']['test']['subfolder']\r\n\r\nAnd **`./test/subfolder`** file(s) :\r\n\r\n    result['.']['test']['subfolder']['.files']\r\n\r\n\r\nExamples for dates / size / filter and fpath\r\n-----------------------------\r\n\r\n**Example C1 : use `filter.extensionIgnore` and `useFullPath`**\r\n\r\nYou can see fpath value in json result and `jpg` file in no longer returned.\r\n\r\n    var folderContents = require('folder-contents');\r\n    \r\n    var options = {\r\n        \"path\":\"./test\",\r\n        \"filter\":{\r\n            \"extensionIgnore\":['jpg']\r\n        },\r\n        \"useFullPath\": true\r\n    };\r\n    \r\n    var result = folderContents(options);\r\n    console.log(JSON.stringify(result));\r\n    \r\n    // Log result :\r\n    {\r\n    \".files\": [\r\n        {\r\n            \"path\": \"./test\",\r\n            \"name\": \"\",\r\n            \"ext\": \"htaccess\",\r\n            \"fpath\": \"./test/.htaccess\",\r\n            \"size\": 421,\r\n            \"atime\": 1402061211000,\r\n            \"mtime\": 1402061211000,\r\n            \"ctime\": 1402061200000\r\n        }\r\n    ],\r\n    \".folders\": [\r\n        \"subfolder\"\r\n    ]\r\n}\r\n\r\n**Example C2 : use `size` and `date` to false**\r\n\r\nCase for minimum informations\r\n\r\n    var folderContents = require('folder-contents');\r\n    \r\n    var options = {\r\n        \"path\":\"./test\",\r\n        \"date\":false,\r\n        \"size\": false\r\n    };\r\n    \r\n    var result = folderContents(options);\r\n    console.log(JSON.stringify(result));\r\n    \r\n    // Log result :\r\n    {\r\n        \".files\": [\r\n            {\r\n                \"path\": \"./test\",\r\n                \"name\": \"\",\r\n                \"ext\": \"htaccess\"\r\n            },\r\n            {\r\n                \"path\": \"./test\",\r\n                \"name\": \"photo\",\r\n                \"ext\": \"JPG\"\r\n            }\r\n        ],\r\n        \".folders\": [\r\n            \"subfolder\"\r\n        ]\r\n    }\r\n    \r\n**Example C3 : use patterns/format for `date` and `size`**\r\n    \r\n    var folderContents = require('folder-contents');\r\n    \r\n    var options = {\r\n        \"path\":\"./test\",\r\n        \"date\":\"yyyy/mm/dd - HH:MM:ss\",\r\n        \"size\":{\r\n            \"b\":\" B...\",\r\n            \"kb\":\" kB...\",\r\n            \"mb\":\" mB...\",\r\n            \"gb\":\" gB...\",\r\n            \"tb\":\" tB...\"\r\n        }\r\n    };\r\n\r\n    var result = folderContents(options);\r\n    console.log(JSON.stringify(result));\r\n\r\n    // Log result :\r\n    {\r\n        \".files\": [\r\n            {\r\n                \"path\": \"./test\",\r\n                \"name\": \"\",\r\n                \"ext\": \"htaccess\",\r\n                \"size\": \"421 B...\",\r\n                \"atime\": \"2014/06/06 - 15:26:51\",\r\n                \"mtime\": \"2014/06/06 - 15:26:51\",\r\n                \"ctime\": \"2014/06/06 - 15:26:40\"\r\n            },\r\n            {\r\n                \"path\": \"./test\",\r\n                \"name\": \"photo\",\r\n                \"ext\": \"JPG\",\r\n                \"size\": \"2.63 mB...\",\r\n                \"atime\": \"2014/06/06 - 15:29:34\",\r\n                \"mtime\": \"2008/07/22 - 12:31:03\",\r\n                \"ctime\": \"2014/06/06 - 15:29:34\"\r\n            }\r\n        ],\r\n        \".folders\": [\r\n            \"subfolder\"\r\n        ]\r\n    }\r\n\r\n**Example C4 : set **`useBasePath`** to false\r\n\r\n        var folderContents = require('folder-contents');\r\n\r\n        var options = {\r\n            \"path\":\"./test\",\r\n            \"useBasePath\":false,\r\n            \"recursively\":true\r\n        };\r\n\r\n        var result = folderContents(options);\r\n        console.log(JSON.stringify(result));\r\n\r\n        // Log result :\r\n        [\r\n            {\r\n                \"path\": \"/\",\r\n                \"name\": \"\",\r\n                \"ext\": \"htaccess\",\r\n                \"size\": 421,\r\n                \"atime\": 1402061211000,\r\n                \"mtime\": 1402061211000,\r\n                \"ctime\": 1402061200000\r\n            },\r\n            {\r\n                \"path\": \"/\",\r\n                \"name\": \"photo\",\r\n                \"ext\": \"JPG\",\r\n                \"size\": 2760113,\r\n                \"atime\": 1402061374000,\r\n                \"mtime\": 1216722663000,\r\n                \"ctime\": 1402061374000\r\n            },\r\n            {\r\n                \"path\": \"/subfolder\",\r\n                \"name\": \"film\",\r\n                \"ext\": \"mkv\",\r\n                \"size\": 703836104,\r\n                \"atime\": 1402061717000,\r\n                \"mtime\": 1369822031000,\r\n                \"ctime\": 1402061717000\r\n            }\r\n        ]\r\n\r\nVersions\r\n=========\r\n\r\n**v 1.1.0 - 2014/06/18**\r\n\r\nI am working on my other project (folder-to-ui),and I use this package.\r\nSo I found improvements that are not backward compatible.\r\n\r\n* In listed files, I change **`\"path\"`** value content for json result.\r\n    * I don't add end **`/`** so **`./test/`** will now **`./test`** in json result\r\n* It is now possible to set **`useBasePath`** option to false\r\n    * if **`useBasePath`** set to false, **`path`** and **`fpath`** will change in json result\r\n    * **`path`** for **`./test`** will be **`/`** if root folder is `./test`\r\n    * **`path`** for **`./test/subfolder`** will be **`/subfolder`** if root folder is `./test`\r\n    * As you can see if listed file is in root folder I add **`/`**. Only case with end **`/`**\r\n    * For this option you can see Examples B1 and C4 to compare differences.\r\n\r\n**v 1.0.0 - 2014/06/10**\r\n\r\n* Lot of fixs, changes and optimizations since 0.1.0 version. \r\n* Please read documentation\r\n* Add option `recursively`. Default is false !!!\r\n* Fix very hot bug in option path copy in recursive function...\r\n* In conclusion this version will suit many uses.\r\n\r\n**v 0.1.0 - 2014/06/08**\r\n\r\n* Add file dates : atime, ctime, mtime (timestamp).\r\n* Date added if `dates` option is enabled.\r\n* Date is formatted if `dateFormat` option is configured.\r\n* Add file full path : fpath, enabled if `fullPath` option is enabled.\r\n\r\n**v 0.0.9 - 2014/06/07**\r\n\r\n* Add resultJsonStruct option.\r\n* Optimizing options initialization.\r\n\r\n**v 0.0.8 - 2014/06/06**\r\n\r\n* Add byte unit translation.\r\n* `extIgnore` is now case insensitive.\r\n* `extAccept` is now case insensitive.\r\n\r\n**v 0.0.6 - 2014/06/06**\r\n\r\n* Size is now displayable, using package bytes-i18n\r\n\r\n**v 0.0.5 - 2014/06/05**\r\n\r\n* Add size in result.\r\n\r\n\r\n  [1]: https://www.npmjs.org/package/dateformat\r\n  [2]: http://www.linux-faqs.info/general/difference-between-mtime-ctime-and-atime\r\n  [3]: https://www.npmjs.org/package/bytes-i18n",
  "readmeFilename": "README.md",
  "_id": "folder-contents@1.1.0",
  "dist": {
    "shasum": "6f5300844c94ab257886d33d08040477e1ffd289"
  },
  "_from": "folder-contents@",
  "_resolved": "https://registry.npmjs.org/folder-contents/-/folder-contents-1.1.0.tgz"
}
